diff --git a/node_modules/bmd-push-react-native/ios/BMSPushReactBinder.swift b/node_modules/bmd-push-react-native/ios/BMSPushReactBinder.swift
index d2b97f1..bd6a81c 100644
--- a/node_modules/bmd-push-react-native/ios/BMSPushReactBinder.swift
+++ b/node_modules/bmd-push-react-native/ios/BMSPushReactBinder.swift
@@ -52,6 +52,7 @@ import UserNotificationsUI
     var initPromiseResolve:RCTPromiseResolveBlock?
     var initPromiseReject:RCTPromiseRejectBlock?
     var hasInvokedPermissionMethod:Bool = false
+    var hasInvokedOne:Bool = false
     
     // MARK: FUNCTIONS
     public func onChangePermission(status: Bool) {
@@ -317,12 +318,14 @@ import UserNotificationsUI
         
     
         guard let error = notification.object as? Error else {
-            if self.registerPromiseReject != nil {
+            if !self.hasInvokedOne && self.registerPromiseReject != nil {
+                self.hasInvokedOne = true
                 self.registerPromiseReject!("\(404)","didFailToRegisterForRemoteNotifications",nil)
             }
             return
         }
-        if self.registerPromiseReject != nil {
+        if !self.hasInvokedOne && self.registerPromiseReject != nil {
+            self.hasInvokedOne = true
             self.registerPromiseReject!("\(404)","didFailToRegisterForRemoteNotifications",error)
         }
     }
@@ -348,12 +351,15 @@ import UserNotificationsUI
                     if (!error.isEmpty) {
                         let message = error.description
                         // call error callback
-                        if self.registerPromiseReject != nil {
+                        if !self.hasInvokedOne && self.registerPromiseReject != nil {
+                            self.hasInvokedOne = true
                             self.registerPromiseReject!("\(statusCode ?? 404)",message,error as? Error)
                         }
                     }
                     else {
-                        if self.registerPromiseResolve != nil {
+                        if !self.hasInvokedOne && self.registerPromiseResolve != nil {
+                            self.hasInvokedOne = true
+
                             self.registerPromiseResolve!(response)
                         }
                     }
